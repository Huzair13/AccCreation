name: Terraform Organization Setup Pipeline

on:
  workflow_dispatch:

env:
  TF_ROOT: ${{ github.workspace }}/envs/global/org-setup
  AWS_REGION: us-east-1
  AWS_ROLE_ARN: ${{ vars.role_arn }}

permissions:
  id-token: write
  contents: read

jobs:
  validate:
    name: Validate Terraform
    runs-on: ubuntu-latest
    environment: terraform-org-setup

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials (OIDC)
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ env.AWS_ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Install jq
      run: sudo apt-get install -y jq

    - name: Create terraform.tfvars file
      run: |
        mkdir -p ${TF_ROOT}
        cat <<EOF > ${TF_ROOT}/terraform.tfvars
        account_factory_product_id = "${{ secrets.ACCOUNT_FACTORY_PRODUCT_ID }}"
        new_account_email = "${{ secrets.NEW_ACCOUNT_EMAIL }}"
        test_email = "${{ secrets.TEST_EMAIL }}"
        security_email = "${{ secrets.SECURITY_EMAIL }}"
        shared_email = "${{ secrets.SHARED_EMAIL }}"
        production_email = "${{ secrets.PRODUCTION_EMAIL }}"
        dev_email = "${{ secrets.DEV_EMAIL }}"
        ou_factory_product_id = "${{ secrets.OU_FACTORY_PRODUCT_ID }}"
        sso_user_email = "${{ secrets.SSO_USER_EMAIL }}"
        new_ou_name = "${{ secrets.NEW_OU_NAME }}"
        ou_product_id = "${{ secrets.OU_PRODUCT_ID }}"
        trusted_account_id = "${{ secrets.TRUSTED_ACCOUNT_ID }}"
        organization_id = "${{ secrets.ORGANIZATION_ID }}"
        cross_account_policy_arn = "${{ secrets.CROSS_ACCOUNT_POLICY_ARN }}"
        management_account_id = "${{ secrets.MANAGEMENT_ACCOUNT_ID }}"
        EOF

    - name: Validate JSON file
      run: |
        jq empty account_details.json || (echo "Invalid JSON in account_details.json" && exit 1)

    - name: Terraform init & validate
      working-directory: ${{ env.TF_ROOT }}
      env:
        AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ env.AWS_SESSION_TOKEN }}
      run: |
        terraform init -backend-config=backend.tfbackend
        terraform validate

  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: validate
    environment: terraform-org-setup

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials (OIDC)
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ env.AWS_ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Install jq
      run: sudo apt-get install -y jq

    - name: Create terraform.tfvars file
      run: |
        mkdir -p ${TF_ROOT}
        cat <<EOF > ${TF_ROOT}/terraform.tfvars
        account_factory_product_id = "${{ secrets.ACCOUNT_FACTORY_PRODUCT_ID }}"
        new_account_email = "${{ secrets.NEW_ACCOUNT_EMAIL }}"
        test_email = "${{ secrets.TEST_EMAIL }}"
        security_email = "${{ secrets.SECURITY_EMAIL }}"
        shared_email = "${{ secrets.SHARED_EMAIL }}"
        production_email = "${{ secrets.PRODUCTION_EMAIL }}"
        dev_email = "${{ secrets.DEV_EMAIL }}"
        ou_factory_product_id = "${{ secrets.OU_FACTORY_PRODUCT_ID }}"
        sso_user_email = "${{ secrets.SSO_USER_EMAIL }}"
        new_ou_name = "${{ secrets.NEW_OU_NAME }}"
        ou_product_id = "${{ secrets.OU_PRODUCT_ID }}"
        trusted_account_id = "${{ secrets.TRUSTED_ACCOUNT_ID }}"
        organization_id = "${{ secrets.ORGANIZATION_ID }}"
        cross_account_policy_arn = "${{ secrets.CROSS_ACCOUNT_POLICY_ARN }}"
        management_account_id = "${{ secrets.MANAGEMENT_ACCOUNT_ID }}"
        EOF

    - name: Terraform Init
      working-directory: ${{ env.TF_ROOT }}
      env:
        AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ env.AWS_SESSION_TOKEN }}
      run: terraform init -backend-config=backend.tfbackend

    - name: Terraform Plan
      working-directory: ${{ env.TF_ROOT }}
      run: |
        if [ -f "${{ github.workspace }}/account_details.json" ]; then
          terraform plan -var-file=terraform.tfvars \
            -var-file=${{ github.workspace }}/account_details.json \
            -out=tfplan
        else
          echo "account_details.json not found. Please provide account details."
          exit 1
        fi

    - name: Upload tfplan artifact
      uses: actions/upload-artifact@v3
      with:
        name: tfplan
        path: ${{ env.TF_ROOT }}/tfplan

  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: plan
    environment: terraform-org-setup

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials (OIDC)
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ env.AWS_ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Install jq
      run: sudo apt-get install -y jq

    - name: Create terraform.tfvars file
      run: |
        mkdir -p ${TF_ROOT}
        cat <<EOF > ${TF_ROOT}/terraform.tfvars
        account_factory_product_id = "${{ secrets.ACCOUNT_FACTORY_PRODUCT_ID }}"
        new_account_email = "${{ secrets.NEW_ACCOUNT_EMAIL }}"
        test_email = "${{ secrets.TEST_EMAIL }}"
        security_email = "${{ secrets.SECURITY_EMAIL }}"
        shared_email = "${{ secrets.SHARED_EMAIL }}"
        production_email = "${{ secrets.PRODUCTION_EMAIL }}"
        dev_email = "${{ secrets.DEV_EMAIL }}"
        ou_factory_product_id = "${{ secrets.OU_FACTORY_PRODUCT_ID }}"
        sso_user_email = "${{ secrets.SSO_USER_EMAIL }}"
        new_ou_name = "${{ secrets.NEW_OU_NAME }}"
        ou_product_id = "${{ secrets.OU_PRODUCT_ID }}"
        trusted_account_id = "${{ secrets.TRUSTED_ACCOUNT_ID }}"
        organization_id = "${{ secrets.ORGANIZATION_ID }}"
        cross_account_policy_arn = "${{ secrets.CROSS_ACCOUNT_POLICY_ARN }}"
        management_account_id = "${{ secrets.MANAGEMENT_ACCOUNT_ID }}"
        EOF

    - name: Download tfplan artifact
      uses: actions/download-artifact@v3
      with:
        name: tfplan
        path: ${{ env.TF_ROOT }}

    - name: Terraform Apply
      working-directory: ${{ env.TF_ROOT }}
      env:
        AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ env.AWS_SESSION_TOKEN }}
      run: |
        terraform init -backend-config=backend.tfbackend
        terraform apply -auto-approve tfplan
        terraform output -json created_account_ids > account_ids.json || exit 1
